language: c
dist: bionic
sudo: false

compiler:
  - gcc

cache:
  ccache: true
  directories:
    - $HOME/geany/gtk3

addons:
  apt:
    packages:
    - libgtk-3-dev
    - intltool
    - libtool
    - python-docutils
    - check
    - cppcheck
    # debugger
    - libvte-2.91-dev
    # devhelp
    - libwebkitgtk-dev
    - libwnck-dev
    - libgconf2-dev
    - zlib1g-dev
    # geanygendoc
    - libctpl-dev
    # geanylua
    - liblua5.1-0-dev
    # geanypg
    - libgpgme11-dev
    # geanypy
    - python-dev
    # geanyvc
    - libgtkspell-dev
    - libgtkspell3-3-dev
    # geaniuspaste/updatechecker
    - libsoup2.4-dev
    # git-changebar
    - libgit2-dev
    # markdown
    - libmarkdown2-dev
    # markdown/webhelper
    - libwebkitgtk-3.0-dev
    # multiterm
    - valac
    # pretty-printer
    - libxml2-dev
    # spellcheck
    - libenchant-dev

before_install:
  # build Geany
  - TEMPDIR=$(mktemp -d)
  - git clone git://github.com/geany/geany.git "$TEMPDIR/geany"
  - geany_commit=$(cd "$TEMPDIR/geany" && git rev-parse HEAD)
  - gtkver=gtk3
  - cachedir="$HOME/geany/$gtkver/"
  - cache_id=$(cat "$cachedir/commit-id" 2>/dev/null || echo "none")
  # check if the cache is up-to-date, and either use it, or (re-)create it
  - >
    if test "$geany_commit" = "$cache_id"; then
      echo "Cache '$cachedir' looks good, using it (ID: $cache_id).";
    else
      echo "Cache '$cachedir' is missing, outdated or invalid, dropping it.";
      echo "  Cache ID: $cache_id";
      echo "  Geany ID: $geany_commit";
      rm "$cachedir" -rf || exit 1;
      ( cd "$TEMPDIR/geany"                                   &&
        NOCONFIGURE=1 ./autogen.sh                            &&
        ./configure --prefix="$cachedir"                      &&
        make -j2                                              &&
        make install || exit 1;
        git rev-parse HEAD > "$cachedir/commit-id" || exit 2;
      ) || exit $?;
    fi
  - test -z "$TEMPDIR" || rm -rf "$TEMPDIR"
  - export PKG_CONFIG_PATH="$cachedir/lib/pkgconfig:$PKG_CONFIG_PATH"
  - export LD_LIBRARY_PATH="$cachedir/lib:$LD_LIBRARY_PATH"

before_script:
  # prepare for GP
  - export CFLAGS="-g -O2 -Werror=pointer-arith -Werror=implicit-function-declaration"

script:
  - NOCONFIGURE=1 ./autogen.sh
  - mkdir _build && cd _build
  - ../configure --disable-silent-rules
  - make -j2
  - make -j2 check
  - make -j2 distcheck

after_script:
  - test -z "$TEMPDIR" || rm -rf "$TEMPDIR"
